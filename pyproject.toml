[tool.poetry]
name = "selenium-tkit"
version = "0.1.0.3"
description = "Another selenium toolkit"
authors = ["henrique lino <henrique.lino97@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
selenium = "^4.7.2"
webdriver-manager = "^4.0.0"
fake-useragent = "^1.1.1"
undetected-chromedriver = "^3.1.7"
psutil = "^5.9.4"
retimer = "^0.1.0.9"


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
coverage = "^6.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
[tool.coverage.run]
branch = true
# A list of file name patterns, the files to leave out of measurement or reporting.
omit = ['*/__init__.py', '*/tests/*']

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Don't complain if non-runnable code isn't run:
    'if __name__ == .__main__.:',
    'if.+IS_EXE',
    "if getattr(sys, 'frozen', False) and hasattr(sys, '_MEIPASS'):",
    # Don't test lines with this comment
    'pragma: no cover',
]

show_missing = true
fail_under = 95
# Don’t report files that are 100% covered
# skip_covered = true
# Don’t report files that have no executable code (such as __init__.py files).
skip_empty = true

[tool.flake8]
ignore = [
    'E402', # module level import not at top of file
    # let yapf handle these
    'E501', # line too long
    'E251', # Unexpected spaces around keyword / parameter equals
    'E122', # continuation line missing indentation or outdented
    'E123', # closing bracket does not match indentation of opening bracket's line
    'E124', # closing bracket does not match visual indentation
    'E126', # continuation line over-indented for hanging indent
]
count = true
statistics = true
max-complexity = 25
max-line-length = 200

exclude = [
    'migrations',
    '__pycache__',
    'manage.py',
    'settings.py',
    'env',
    '.env',
    '**/venv/**',
    '**/Lib/**',
    '**/Scripts/**',
]

[tool.yapf]
# https://github.com/google/yapf#knobs
based_on_style = 'google'
indent_width = 4

ALIGN_CLOSING_BRACKET_WITH_VISUAL_INDENT = false
ALLOW_MULTILINE_LAMBDAS = true
ALLOW_MULTILINE_DICTIONARY_KEYS = false
ALLOW_SPLIT_BEFORE_DEFAULT_OR_NAMED_ASSIGNS = true
ALLOW_SPLIT_BEFORE_DICT_VALUE = true
ARITHMETIC_PRECEDENCE_INDICATION = true
BLANK_LINE_BEFORE_NESTED_CLASS_OR_DEF = true
BLANK_LINE_BEFORE_MODULE_DOCSTRING = false
BLANK_LINE_BEFORE_CLASS_DOCSTRING = false
BLANK_LINES_AROUND_TOP_LEVEL_DEFINITION = 2
BLANK_LINES_BETWEEN_TOP_LEVEL_IMPORTS_AND_VARIABLES = 2
COALESCE_BRACKETS = false
COLUMN_LIMIT = 200
CONTINUATION_ALIGN_STYLE = 'SPACE'
DEDENT_CLOSING_BRACKETS = true
EACH_DICT_ENTRY_ON_SEPARATE_LINE = true
INDENT_DICTIONARY_VALUE = true
INDENT_CLOSING_BRACKETS = false
SPACES_BEFORE_COMMENT = 2
SPLIT_ALL_COMMA_SEPARATED_VALUES = false

[tool.yapfignore]
ignore_patterns = ["**/venv/**", "**/Lib/**", "**/Scripts/**"]



[tool.scriv]
version = 'literal: pyproject.toml: tool.poetry.version'
format = 'md'